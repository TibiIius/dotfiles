{{/*
  This represents the chezmoi config used for the initializing machine.
  If possible, prompts for a choice of different machines. If no TTY is available, or if we detect we're running inside a devcontainer, it will default to the "dev" machine.
*/}}

{{/*
  Machines:
    - dev: Represents a "machine" that is used for development, e.g. a dev container or some other minimal environment.
    - server: Represents a server machine, i.e. no sophisticated dev env or GUI is needed.
    - work: Represents my work machine.
    - home: Represents private machines.
 */}}
{{- $machineTypes := list "dev" "server" "work" "home" -}}
{{- $machineType := "" -}}

{{- $devcontainer:= (or (env "CODESPACES" | not | not) (env "REMOTE_CONTAINERS" | not | not)) -}}

{{- if or $devcontainer (not stdinIsATTY) -}}
  {{- $machineType = "dev" -}}
{{- else -}}
  {{- $machineType = promptChoiceOnce . "machineType" "What type of machine is this" $machineTypes -}}
{{- end -}}

{{/* Figure out if we have Homebrew support (currently no support under Linux/arm) */}}
{{- $homebrewSupported := true -}}
{{- if (and (eq .chezmoi.arch "arm64") (eq .chezmoi.os "Linux")) -}}
  {{- $homebrewSupported = false -}}
{{/* No real reason to install Homebrew in something small like a dev container */}}
{{- else if (eq $machineType "dev") -}}
  {{ $homebrewSupported = false }}
{{- else if stdinIsATTY -}}
  {{ $homebrewSupported = promptBoolOnce . "homebrewSupported" "Do you want to install Homebrew" true }}
{{- end -}}


{{/* Personal info */}}
{{- $email:= "oss@timfb.dev" -}}
{{- $name:= "Tim Friedrich Br√ºggemann" -}}

{{- if eq $machineType "work" -}}
  {{- $email = promptStringOnce . "email" "Enter your work email" -}}
  {{- $name = promptStringOnce . "name" "Enter your work name" -}}
{{- end -}}


{{/* Actual config */}}

sourceDir: "{{ .chezmoi.sourceDir }}"

data:
  name: {{ $name | quote }}
  email: {{ $email | quote }}
  machineType: {{ $machineType | quote }}
  devcontainer: {{ $devcontainer }}
  homebrewSupported: {{ $homebrewSupported }}
  packages:
    rust:
      - flamegraph
      - cargo-update
      - cross
    common:
      - brew: atuin
        cargo: atuin
      - brew: bandwhich
        cargo: bandwhich
      - brew: bat
        cargo: bat
      - brew: bottom
        cargo: bottom
      - brew: broot
        cargo: broot
      - brew: dust
        cargo: du-dust
      - brew: eza
        cargo: eza
      - brew: hyperfine
        cargo: hyperfine
      - brew: zoxide
        cargo: zoxide
      - brew: ripgrep
        cargo: ripgrep
      - brew: ripgrep-all
        cargo: ripgrep_all
      - brew: fd
        cargo: fd-find
      - brew: hexyl
        cargo: hexyl
      - brew: rbw
        cargo: rbw
      - brew: xh
        cargo: xh
      - brew: git-absorb
        cargo: git-absorb
      - brew: procs
        cargo: procs
      - brew: tokei
        cargo: tokei
      - brew: websocat
        cargo: websocat
      - brew: py-spy
        cargo: py-spy
      - brew: minikube
      - brew: kubectl
      - brew: helm
      - brew: tmux
      - brew: ruby
      - brew: onefetch
        cargo: onefetch
  {{- if eq .chezmoi.os "darwin" }}
      - cask: visual-studio-code
      - cask: iterm2
      - cask: spotify
      - cask: google-chrome
      - cask: firefox
      - brew: docker
      - brew: docker-compose
    {{- if eq .machineType "work" }}
      - cask: slack
      - cask: dbeaver-community
    {{- end }}
  {{- end }}

merge:
  command: "nvim"
  args: ["-d", "{{ "{{" }} .Destination {{ "}}" }}", "{{ "{{" }} .Source {{ "}}" }}", "{{ "{{" }} .Target {{ "}}" }}"]
