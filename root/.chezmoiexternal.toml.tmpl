{{ $os_with_cstdlib := "" }}
{{- if eq .chezmoi.os "linux" -}}
  {{ $os_with_cstdlib = printf "%s-%s" .chezmoi.os .cStdLib }}
{{- else -}}
  {{ $os_with_cstdlib = .chezmoi.os }}
{{- end -}}

{{- $k8s_version := output "curl" "-LS" "--silent" "--fail" "https://dl.k8s.io/release/stable.txt" | trim -}}

{{- $helm_version := (gitHubLatestRelease "helm/helm").TagName | trim -}}

[".local/bin/age"]
  type = "archive-file"
  url = {{ gitHubLatestReleaseAssetURL "FiloSottile/age" (printf "age-*-%s-%s.tar.gz" .chezmoi.os .chezmoi.arch) | quote }}
  executable = true
  path = "age"
  stripComponents = 1

[".local/bin/age-keygen"]
  type = "archive-file"
  url = {{ gitHubLatestReleaseAssetURL "FiloSottile/age" (printf "age-*-%s-%s.tar.gz" .chezmoi.os .chezmoi.arch) | quote }}
  executable = true
  path = "age-keygen"
  stripComponents = 1

[".local/bin/cross"]
  type = "archive-file"
  url = {{ gitHubLatestReleaseAssetURL "cross-rs/cross" (printf "cross-%s-*-%s*.tar.gz" .alterArch .chezmoi.os) | quote }}
  executable = true
  path = "cross"

[".local/bin/cross-util"]
  type = "archive-file"
  url = {{ gitHubLatestReleaseAssetURL "cross-rs/cross" (printf "cross-%s-*-%s*.tar.gz" .alterArch .chezmoi.os) | quote }}
  executable = true
  path = "cross-util"

[".local/bin/atuin"]
  type = "archive-file"
  url = {{ gitHubLatestReleaseAssetURL "atuinsh/atuin" (printf "atuin-%s-*-%s-gnu*tar.gz" .alterArch .chezmoi.os) | quote }}
  executable = true
  path = "atuin"
  stripComponents = 1

[".local/bin/bat"]
  type = "archive-file"
  url = {{ gitHubLatestReleaseAssetURL "sharkdp/bat" (printf "bat-*-%s-*-%s*.tar.gz" .alterArch .chezmoi.os) | quote }}
  executable = true
  path = "bat"
  stripComponents = 1

{{- if not (eq .chezmoi.os "darwin") }}
[".local/bin/broot"]
  type = "archive-file"
  url = {{ gitHubLatestReleaseAssetURL "Canop/broot" "broot_*.zip" | quote }}
  executable = true
  path = {{ printf "%s-%s/broot" .alterArch .chezmoi.os | quote }}
{{- end }}

[".local/bin/dust"]
  type = "archive-file"
  url = {{ gitHubLatestReleaseAssetURL "bootandy/dust" (printf "dust-*-%s-*-%s*.tar.gz" .alterArch .chezmoi.os) | quote }}
  executable = true
  stripComponents = 1
  path = "dust"

[".local/bin/zoxide"]
  type = "archive-file"
  url = {{ gitHubReleaseAssetURL "cargo-bins/cargo-quickinstall" "zoxide-0.9.7" (printf "zoxide-*-%s-*-%s-%s.tar.gz" .alterArch .chezmoi.os .cStdLib) | quote }}
  executable = true
  path = "zoxide"

[".local/bin/eza"]
  type = "archive-file"
  url = {{ gitHubReleaseAssetURL "cargo-bins/cargo-quickinstall" "eza-0.21.0" (printf "eza-*-%s-*-%s.tar.gz" .alterArch $os_with_cstdlib) | quote }}
  executable = true
  path = "eza"

[".local/bin/flamegraph"]
  type = "archive-file"
  url = {{ gitHubReleaseAssetURL  "cargo-bins/cargo-quickinstall" "flamegraph-0.6.7" (printf "flamegraph-*-%s-*-%s.tar.gz" .alterArch $os_with_cstdlib) | quote }}
  executable = true
  path = "flamegraph"

[".local/bin/rg"]
  type = "archive-file"
  url = {{ gitHubReleaseAssetURL "cargo-bins/cargo-quickinstall" "ripgrep-14.1.1" (printf "ripgrep-*-%s-*-%s.tar.gz" .alterArch $os_with_cstdlib) | quote }}
  executable = true
  path = "rg"

[".local/bin/rga"]
  type = "archive"
  url = {{ gitHubReleaseAssetURL "cargo-bins/cargo-quickinstall" "ripgrep_all-0.10.6" (printf "ripgrep_all-*-%s-*-%s.tar.gz" .alterArch $os_with_cstdlib) | quote }}
  executable = true
  path = "rga"

[".local/bin/fd"]
  type = "archive-file"
  url = {{ gitHubLatestReleaseAssetURL "sharkdp/fd" (printf "fd-*-%s-*-%s*.tar.gz" .alterArch $os_with_cstdlib) | quote }}
  executable = true
  stripComponents = 1
  path = "fd"

[".local/bin/procs"]
  type = "archive-file"
  url = {{ gitHubReleaseAssetURL  "cargo-bins/cargo-quickinstall" "procs-0.14.10" (printf "procs-*-%s-*-%s.tar.gz" .alterArch $os_with_cstdlib) | quote }}
  executable = true
  path = "procs"

[".local/bin/fzf"]
  type = "archive-file"
  url = {{ gitHubLatestReleaseAssetURL "junegunn/fzf" (printf "fzf-*-%s_%s.tar.gz" .chezmoi.os .chezmoi.arch) | quote }}
  executable = true
  path = "fzf"

[".local/bin/jq"]
  type = "file"
  url = {{ gitHubLatestReleaseAssetURL "jqlang/jq" (printf "jq-%s-%s" .chezmoi.os .chezmoi.arch) | quote }}
  executable = true

[".local/bin/yq"]
  type = "file"
  url = {{ gitHubLatestReleaseAssetURL "mikefarah/yq" (printf "yq_%s_%s" .chezmoi.os .chezmoi.arch) | quote }}
  executable = true

[".local/bin/joshuto"]
  type = "archive-file"
  url = {{ gitHubReleaseAssetURL "cargo-bins/cargo-quickinstall" "joshuto-0.9.7" (printf "joshuto-*-%s-*-%s.tar.gz" .alterArch $os_with_cstdlib) | quote }}
  executable = true
  path = "joshuto"

{{- if ne .machineType "server" }}
[".local/bin/hexyl"]
  type = "archive-file"
  url = {{ gitHubLatestReleaseAssetURL "sharkdp/hexyl" (printf "hexyl-*-%s-*-%s.tar.gz" .alterArch $os_with_cstdlib) | quote }}
  executable = true
  stripComponents = 1
  path = "hexyl"

[".local/bin/xh"]
  type = "archive-file"
  url = {{ gitHubReleaseAssetURL "cargo-bins/cargo-quickinstall" "xh-0.24.0" (printf "xh-*-%s-*-%s.tar.gz" .alterArch $os_with_cstdlib) | quote }}
  executable = true
  path = "xh"

[".local/bin/hyperfine"]
  type = "archive-file"
  url = {{ gitHubLatestReleaseAssetURL "sharkdp/hyperfine" (printf "hyperfine-*-%s-*-%s.tar.gz" .alterArch $os_with_cstdlib) | quote }}
  executable = true
  stripComponents = 1
  path = "hyperfine"

[".local/bin/tokei"]
  type = "archive-file"
  url = {{ gitHubReleaseAssetURL "cargo-bins/cargo-quickinstall" "tokei-12.1.2" (printf "tokei-*-%s-*-%s.tar.gz" .alterArch $os_with_cstdlib) | quote }}
  executable = true
  path = "tokei"
{{- end }}

{{- if not .ephemeral }}
[".local/bin/bandwhich"]
  type = "archive-file"
  url = {{ gitHubLatestReleaseAssetURL "imsnif/bandwhich" (printf "bandwhich-*-%s-*-%s*.tar.gz" .alterArch $os_with_cstdlib) | quote }}
  executable = true
  path = "bandwhich"

[".local/bin/btm"]
  type = "archive-file"
  url = {{ gitHubReleaseAssetURL "cargo-bins/cargo-quickinstall" "bottom-0.10.2" (printf "bottom-*-%s-*-%s*.tar.gz" .alterArch $os_with_cstdlib) | quote }}
  executable = true
  path = "btm"

  {{- if ne .machineType "server" }}
[".local/bin/websocat"]
  type = "archive-file"
  url = {{ gitHubReleaseAssetURL "cargo-bins/cargo-quickinstall" "websocat-1.14.0" (printf "websocat-*-%s-*-%s*.tar.gz" .alterArch $os_with_cstdlib) | quote }}
  executable = true
  path = "websocat"

[".local/bin/rbw"]
  type = "archive-file"
  url = {{ gitHubReleaseAssetURL "cargo-bins/cargo-quickinstall" "rbw-1.13.2" (printf "rbw-*-%s-*-%s*.tar.gz" .alterArch $os_with_cstdlib) | quote }}
  executable = true
  path = "rbw"

[".local/bin/minikube"]
  type = "file"
  url = {{ gitHubLatestReleaseAssetURL "kubernetes/minikube" (printf "minikube-%s-%s" .chezmoi.os .chezmoi.arch) | quote }}
  executable = true

[".local/bin/kubectl"]
  type = "file"
  url = {{ (printf "https://dl.k8s.io/release/%s/bin/%s/%s/kubectl" $k8s_version .chezmoi.os .chezmoi.arch) | quote }}
  executable = true
  path = "kubectl"

[".local/bin/talosctl"]
  type = "file"
  url = {{ gitHubLatestReleaseAssetURL "siderolabs/talos" (printf "talosctl-%s-%s" .chezmoi.os .chezmoi.arch) | quote }}
  executable = true

[".local/bin/helm"]
  type = "file"
  url = {{ (printf "https://get.helm.sh/helm-%s-%s-%s.tar.gz" $helm_version .chezmoi.os .chezmoi.arch) | quote }}
  executable = true
  stripComponents = 1
  path = "helm"

[".local/bin/onefetch"]
  type = "archive-file"
  url = {{ gitHubReleaseAssetURL "cargo-bins/cargo-quickinstall" "onefetch-2.23.1" (printf "onefetch-*-%s-*-%s*.tar.gz" .alterArch $os_with_cstdlib) | quote }}
  executable = true
  path = "onefetch"
  {{- end }}
{{- end }}
