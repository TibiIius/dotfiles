# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Chezmoi does updates for us
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git zsh-autosuggestions zsh-syntax-highlighting fzf-zsh-plugin)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Prompt
eval $(starship init zsh)

# Zoxide init
[[ $(command -v zoxide) ]] && eval "$(zoxide init zsh)"

# Aliases
## Replacements
[[ $(command -v bat) ]] && alias cat='bat'
[[ $(command -v rg) ]] && alias grep='rg'
[[ $(command -v fd) ]] && alias find='fd'
[[ $(command -v dust) ]] && alias du='dust'
## Git aliases
alias gitc='git commit'
alias gitca='git commit --amend'
alias gitcan='git commit --amend --no-edit'
alias gitcf='git commit --fixup HEAD'
alias gitg='git fetch --all && git pull'
alias gitgp='git fetch --all --prune && git pull'
alias gitp='git push'
## Misc
alias temppls='cd $(mktemp -d)'
alias hostpls='distrobox-host-exec $SHELL'
alias dhe='distrobox-host-exec'
alias rm='rm -I'
## Chezmoi
alias ce='chezmoi edit --apply'
## Marp with Docker
alias marp-convert="podman run --rm -v $PWD:/home/marp/app/:Z -e LANG=$LANG -e MARP_USER=\"0:0\" marpteam/marp-cli"
alias marp-serve="podman run --rm --init -v $PWD:/home/marp/app:Z -e LANG=$LANG -e MARP_USER=\"0:0\" -p 8080:8080 -p 37717:37717 marpteam/marp-cli -s"

# Tmux function for convenience
if [[ $(command -v tmux) ]]; then
  TMUX_EXEC=$(command -v tmux)
  tmux() {
    if [ -z "$1" ]; then
      $TMUX_EXEC
    else
      if [ "$1" = "a" ] && ! $TMUX_EXEC has-session 2>/dev/null; then
        $TMUX_EXEC
      else
        $TMUX_EXEC $1
      fi
    fi
  }
fi

# Go stuff
export GOPATH=$HOME/.local/share/go
export PATH=$GOPATH/bin:$PATH

# rtx
eval "$(rtx activate zsh)"

# Load completions
fpath+=~/.zfunc
autoload -U compinit && compinit

